{
    "name": "no-gt-392",
    "phase": "val", // train or val
    "gpu_ids": [
        4,5
    ],
    "distributed": false,
    "path": { //set the path
        "log": "logs",
        "tb_logger": "tb_logger",
        "results": "results",
        "checkpoint": "checkpoint",
        "resume_state":"/mnt/data1/zj/shadowdiffusion/24_1/experiments/harmony_11.4_for mask_231204_164233/checkpoint/I70000_E392"

    },
    "datasets": {
        "train": {
            "name": "harmony",
            "dataroot": "/mnt/data1/zj/Object-Shadow-Generation-Dataset-DESOBAv2/test/",
            "datatype": "img", //lmdb or img, path of img files
            //"resolution": 256,
            "batch_size": 4,    //when dubug, it will be set to 2; ori 4
            "num_workers": 1,   //when dubug, it will be set to 1; ori 8
            "use_shuffle": true,
            "data_len": -1 // -1 represents all data used in train, when dubug, you can use small size like 10 or 100
        },
        "val": {
            "name": "harmony",
            "dataroot": "/mnt/data1/zj/Object-Shadow-Generation-Dataset-DESOBAv2/test/",
            "datatype": "img", //lmdb or img, path of img files
            //"resolution": 256,
            "data_len": 300 // data length in validation ori 50
        }
    },
    "model": {
        "which_model_G": "sr3", // use the ddpm or sr3 network structure
        "finetune_norm": false,
        "unet": {
            "in_channel": 6,     // x+y+mask = 3+3+1 = 7
            "out_channel": 3,
            "inner_channel": 64,
            "channel_multiplier": [
                1,
                2,
                4,
                8,
                8
            ],
            "attn_res": [
                16
            ],
            "res_blocks": 2,
            "dropout": 0.2
        },
        "beta_schedule": { // use munual beta_schedule for acceleration
            "train": {
                "schedule": "linear",
                "n_timestep": 1000,     //2000
                "linear_start": 0.0001, //1e-6
                "linear_end": 0.02      //1e-2
            },
            "val": {
                "schedule": "linear",
                "n_timestep": 200,     //1000
                "linear_start": 0.0001,
                "linear_end": 0.02
            }
        },
        "diffusion": {
            "phase": "train",  // train or val
            "image_size": 128,
            "channels": 3, //sample channel
            "conditional": true // unconditional generation or unconditional generation(super_resolution)
        }
    },
    "train": {
        "n_iter": 1000000,     // 100000
        "val_freq": 5000,        //1e4       1e4 çº¦ 100min
        "save_checkpoint_freq": 1e4,        //1e4
        "print_freq": 1e4,
        "optimizer": {
            "type": "adam",
            "lr": 0.00003      // 0.00003, 1e-4
        },
        "ema_scheduler": { // not used now
            "step_start_ema": 1000,       //5000
            "update_ema_every": 1,
            "ema_decay": 0.9999
        }
    },
    "wandb": {
        "project": "harmony"
    }
}